apply plugin: 'com.android.application'
apply plugin: 'com.github.ben-manes.versions'
apply from: "$rootDir/gradle/gradle-quality.gradle"

if (rootProject.ext.useRetroLambda) {
    apply plugin: 'me.tatarka.retrolambda'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.evernote.android.state.demo.java8"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)

        jackOptions {
            enabled !rootProject.ext.useRetroLambda
            additionalParameters("jack.incremental" : "true")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles 'proguard.cfg'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.cfg'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions.unitTests {
        returnDefaultValues = true
        all {
            testLogging {
                events 'failed', 'standardOut', 'standardError'
            }
        }
    }

    lintOptions {
        abortOnError true
    }
}

dependencies {
    compile project(':library')
    annotationProcessor project(':processor')
    compile "com.android.support:appcompat-v7:$supportLibVersion"

    testCompile "junit:junit:$junitVersion"
    testCompile 'org.assertj:assertj-core:1.7.1'
    testCompile 'org.robolectric:robolectric:3.2.2'
    testCompile 'org.robolectric:android-all:6.0.0_r1-robolectric-0'
}

uploadArchives.enabled false